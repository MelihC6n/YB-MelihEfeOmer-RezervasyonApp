<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>