// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MelihEfeOmer_RezervasyonApp.DataAccess.Context;

#nullable disable

namespace YB_MelihEfeOmer_RezervasyonApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240726080156_newDataSetted3")]
    partial class newDataSetted3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("BRBookingGuests");

                    b.HasData(
                        new
                        {
                            BookingId = new Guid("76fb6102-fdc8-4bf6-8582-90135dde6ee7"),
                            GuestId = new Guid("934bb9eb-5d42-486b-824e-f8d4bcd2d742"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2523),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("234bfb32-8b1e-42e4-bafc-7e0d310d009e"),
                            GuestId = new Guid("d1677225-1aa5-484a-849d-f26956279522"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2525),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("f60de4d0-d5e7-42d1-ae81-c6e5d06f7d9d"),
                            GuestId = new Guid("6a23c468-7a24-4cff-9330-f09efa97aeab"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2567),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("cb4a1d63-6970-41d4-a5f1-fb38862d6133"),
                            GuestId = new Guid("a962a452-934a-4cfd-a678-c1a12c23758c"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2568),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("4ffbfa1a-4628-4955-b0cf-1a1ec6918b7e"),
                            GuestId = new Guid("15be594c-966d-4d3c-8cdd-185a2c16a23b"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2569),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("6fc6022c-9162-4fd8-99d7-0dded4789219"),
                            GuestId = new Guid("26f1e987-dec2-41e6-aa5f-c1c570504578"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2659),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("68908bb0-ff6b-456a-aaab-669f023be384"),
                            GuestId = new Guid("8d784768-9c34-4bda-a2bc-2b522085fa04"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2660),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("CheckinDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CheckoutDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76fb6102-fdc8-4bf6-8582-90135dde6ee7"),
                            CheckinDate = new DateOnly(2024, 9, 10),
                            CheckoutDate = new DateOnly(2024, 9, 15),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2508),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("1d7f4ed8-75c0-45ec-b5de-9ca849733e7f"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("234bfb32-8b1e-42e4-bafc-7e0d310d009e"),
                            CheckinDate = new DateOnly(2024, 9, 20),
                            CheckoutDate = new DateOnly(2024, 9, 25),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2511),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("5e6bb513-651e-4081-a4c2-99fde106565d"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f60de4d0-d5e7-42d1-ae81-c6e5d06f7d9d"),
                            CheckinDate = new DateOnly(2024, 9, 5),
                            CheckoutDate = new DateOnly(2024, 9, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2553),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("282a28e2-15b7-411e-9403-3f64e607815d"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb4a1d63-6970-41d4-a5f1-fb38862d6133"),
                            CheckinDate = new DateOnly(2024, 9, 15),
                            CheckoutDate = new DateOnly(2024, 9, 18),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2554),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("4f11eb3c-48e3-4886-8595-3800b2071a68"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4ffbfa1a-4628-4955-b0cf-1a1ec6918b7e"),
                            CheckinDate = new DateOnly(2024, 10, 1),
                            CheckoutDate = new DateOnly(2024, 10, 5),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2555),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("7f6ebc0a-cf38-443c-8011-01dd83c173f2"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6fc6022c-9162-4fd8-99d7-0dded4789219"),
                            CheckinDate = new DateOnly(2024, 10, 5),
                            CheckoutDate = new DateOnly(2024, 10, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2632),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("b398eda2-90f3-4896-8c96-a008b23230f2"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("68908bb0-ff6b-456a-aaab-669f023be384"),
                            CheckinDate = new DateOnly(2024, 10, 15),
                            CheckoutDate = new DateOnly(2024, 10, 20),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2646),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("1941dd5d-2313-4498-b9f4-9ac303648da1"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique()
                        .HasFilter("[IdentityNumber] IS NOT NULL");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("934bb9eb-5d42-486b-824e-f8d4bcd2d742"),
                            Address = "Ankara Çankaya",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2491),
                            DateOfBirth = new DateOnly(1990, 6, 30),
                            Email = "mehmet.kara@example.com",
                            FirstName = "Mehmet",
                            IdentityNumber = "12345678901",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kara",
                            Phone = "01234567892",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d1677225-1aa5-484a-849d-f26956279522"),
                            Address = "İzmir Karşıyaka",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2494),
                            DateOfBirth = new DateOnly(1988, 12, 25),
                            Email = "ayse.yilmaz@example.com",
                            FirstName = "Ayşe",
                            IdentityNumber = "10987654321",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "09876543212",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a23c468-7a24-4cff-9330-f09efa97aeab"),
                            Address = "Bursa Nilüfer",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2536),
                            DateOfBirth = new DateOnly(1985, 4, 12),
                            Email = "burak.ozdemir@example.com",
                            FirstName = "Burak",
                            IdentityNumber = "12345678902",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Özdemir",
                            Phone = "01234567893",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a962a452-934a-4cfd-a678-c1a12c23758c"),
                            Address = "Antalya Konyaaltı",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2538),
                            DateOfBirth = new DateOnly(1992, 8, 22),
                            Email = "zeynep.aydin@example.com",
                            FirstName = "Zeynep",
                            IdentityNumber = "10987654322",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Aydın",
                            Phone = "09876543213",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("15be594c-966d-4d3c-8cdd-185a2c16a23b"),
                            Address = "İstanbul Şişli",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2539),
                            DateOfBirth = new DateOnly(1980, 11, 10),
                            Email = "can.yurt@example.com",
                            FirstName = "Can",
                            IdentityNumber = "45678912301",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yurt",
                            Phone = "05678912345",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("26f1e987-dec2-41e6-aa5f-c1c570504578"),
                            Address = "İstanbul Kadıköy",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2619),
                            DateOfBirth = new DateOnly(1986, 2, 20),
                            Email = "ege.kurt@example.com",
                            FirstName = "Ege",
                            IdentityNumber = "67890123456",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kurt",
                            Phone = "05556667788",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8d784768-9c34-4bda-a2bc-2b522085fa04"),
                            Address = "İzmir Alsancak",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2620),
                            DateOfBirth = new DateOnly(1995, 7, 15),
                            Email = "elif.sonmez@example.com",
                            FirstName = "Elif",
                            IdentityNumber = "54321098765",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Sönmez",
                            Phone = "07778889900",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("CheckinTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckoutTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte>("Stars")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("045ffc63-66ce-4c80-9810-87d7a393677f"),
                            Address = "Antalya/Belek",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2346),
                            Email = "hiltonhotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hilton",
                            Phone = "01234567890",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4ef75300-35bf-42c6-abe5-336d2ef35dcb"),
                            Address = "Bodrum/Yalıkavak",
                            CheckinTime = new TimeOnly(15, 0, 0),
                            CheckoutTime = new TimeOnly(11, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2361),
                            Email = "marriotthotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Marriott",
                            Phone = "09876543210",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7aba79bd-e6b2-41f7-a3d7-a6f85ff28c64"),
                            Address = "Ankara Çankaya",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2580),
                            Email = "radissonblu@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Radisson Blu",
                            Phone = "02223334455",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d7f4ed8-75c0-45ec-b5de-9ca849733e7f"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2467),
                            HotelId = new Guid("045ffc63-66ce-4c80-9810-87d7a393677f"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 201,
                            RoomTypeId = new Guid("1db1fdd6-213f-4bf0-a1b0-ac49ccc2941f"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("282a28e2-15b7-411e-9403-3f64e607815d"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2468),
                            HotelId = new Guid("045ffc63-66ce-4c80-9810-87d7a393677f"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 202,
                            RoomTypeId = new Guid("20ea6585-a22e-4c38-ac32-05d933fa7b11"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5e6bb513-651e-4081-a4c2-99fde106565d"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2470),
                            HotelId = new Guid("4ef75300-35bf-42c6-abe5-336d2ef35dcb"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 301,
                            RoomTypeId = new Guid("97a95cb3-f95c-46e2-80b7-913d525c6f7f"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4f11eb3c-48e3-4886-8595-3800b2071a68"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2471),
                            HotelId = new Guid("4ef75300-35bf-42c6-abe5-336d2ef35dcb"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 302,
                            RoomTypeId = new Guid("1db1fdd6-213f-4bf0-a1b0-ac49ccc2941f"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7f6ebc0a-cf38-443c-8011-01dd83c173f2"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2472),
                            HotelId = new Guid("4ef75300-35bf-42c6-abe5-336d2ef35dcb"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 303,
                            RoomTypeId = new Guid("20ea6585-a22e-4c38-ac32-05d933fa7b11"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b398eda2-90f3-4896-8c96-a008b23230f2"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2605),
                            HotelId = new Guid("7aba79bd-e6b2-41f7-a3d7-a6f85ff28c64"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 101,
                            RoomTypeId = new Guid("5ec9600f-1905-41e8-a4e7-38c01388e3ba"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1941dd5d-2313-4498-b9f4-9ac303648da1"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2607),
                            HotelId = new Guid("7aba79bd-e6b2-41f7-a3d7-a6f85ff28c64"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 102,
                            RoomTypeId = new Guid("c4b2acb3-d9c4-4b52-8a13-e99edcb57810"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a37d4708-0a18-4acf-9091-d8d1e479c363"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2608),
                            HotelId = new Guid("7aba79bd-e6b2-41f7-a3d7-a6f85ff28c64"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 103,
                            RoomTypeId = new Guid("c4b2acb3-d9c4-4b52-8a13-e99edcb57810"),
                            Status = "Occupied",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Capacity")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1db1fdd6-213f-4bf0-a1b0-ac49ccc2941f"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2447),
                            Description = "Deluxe room with sea view",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deluxe",
                            PricePerNight = 2000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("20ea6585-a22e-4c38-ac32-05d933fa7b11"),
                            Capacity = (byte)2,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2450),
                            Description = "Executive room with additional amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Executive",
                            PricePerNight = 3500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("97a95cb3-f95c-46e2-80b7-913d525c6f7f"),
                            Capacity = (byte)1,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2451),
                            Description = "Standard room",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Standard",
                            PricePerNight = 700m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5ec9600f-1905-41e8-a4e7-38c01388e3ba"),
                            Capacity = (byte)4,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2592),
                            Description = "Luxurious Presidential Suite",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Royal S",
                            PricePerNight = 5000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c4b2acb3-d9c4-4b52-8a13-e99edcb57810"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2594),
                            Description = "Spacious Junior Suite with extra amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Junior S.",
                            PricePerNight = 2500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c8978a3-f817-4463-a447-1de0e3b1245f"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2415),
                            DateOfBirth = new DateOnly(1985, 5, 15),
                            Email = "emre.yilmaz@example.com",
                            FirstName = "Emre",
                            HireDate = new DateOnly(2015, 6, 1),
                            HotelId = new Guid("045ffc63-66ce-4c80-9810-87d7a393677f"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "01234567891",
                            Position = "Receptionist",
                            Salary = 30000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("74a56b44-8777-4847-a658-5559ebb3d131"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 56, 232, DateTimeKind.Local).AddTicks(2427),
                            DateOfBirth = new DateOnly(1982, 3, 10),
                            Email = "selin.demir@example.com",
                            FirstName = "Selin",
                            HireDate = new DateOnly(2018, 4, 1),
                            HotelId = new Guid("4ef75300-35bf-42c6-abe5-336d2ef35dcb"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Demir",
                            Phone = "09876543211",
                            Position = "Chef",
                            Salary = 40000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", "Guest")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Navigation("BRBookingGuests");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Navigation("BRBookingGuests");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
