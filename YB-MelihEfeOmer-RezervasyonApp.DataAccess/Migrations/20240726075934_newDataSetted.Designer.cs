// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MelihEfeOmer_RezervasyonApp.DataAccess.Context;

#nullable disable

namespace YB_MelihEfeOmer_RezervasyonApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240726075934_newDataSetted")]
    partial class newDataSetted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("BRBookingGuests");

                    b.HasData(
                        new
                        {
                            BookingId = new Guid("58094ce7-c2db-4ffe-836a-4f12c00a10af"),
                            GuestId = new Guid("72ac912b-58fa-4bd4-ab8e-51ab54a88fcb"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7926),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("7414bc74-4ea1-452e-8bbf-3afbd74d006a"),
                            GuestId = new Guid("643447f1-41e4-4108-960c-5a6238d8cdd4"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7953),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("9ef23a72-f15b-46e8-bb19-6812e95d264c"),
                            GuestId = new Guid("e292e5b5-adc2-4801-8205-538872f66e50"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7999),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("9488f069-d113-4713-99ff-0ef16f3bbf24"),
                            GuestId = new Guid("02b317f3-5d36-4cb7-a9ec-4c54ea631a17"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8000),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("4a13c025-8234-440c-9885-66e8ea795f38"),
                            GuestId = new Guid("cb201a57-e759-4ae1-abc7-800d95ba60d3"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8001),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("61b6ed7c-5e1d-4c66-980d-e2bf55f60d35"),
                            GuestId = new Guid("0f405f0b-a999-42b2-8e66-898d1e9bcf72"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8077),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("29bbc89c-78de-41c3-9eb8-f9b5229c0e2c"),
                            GuestId = new Guid("bc067eba-e5c8-4801-83bc-f2cc33796360"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8078),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("CheckinDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CheckoutDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58094ce7-c2db-4ffe-836a-4f12c00a10af"),
                            CheckinDate = new DateOnly(2024, 9, 10),
                            CheckoutDate = new DateOnly(2024, 9, 15),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7910),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("0487e1bf-ae68-4a98-a940-45d75f8f6ccf"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7414bc74-4ea1-452e-8bbf-3afbd74d006a"),
                            CheckinDate = new DateOnly(2024, 9, 20),
                            CheckoutDate = new DateOnly(2024, 9, 25),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7914),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("62d1962b-b17d-4bb3-b1c6-c6af731f090b"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9ef23a72-f15b-46e8-bb19-6812e95d264c"),
                            CheckinDate = new DateOnly(2024, 9, 5),
                            CheckoutDate = new DateOnly(2024, 9, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7983),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("da461c7d-e8d1-4009-b1b8-d8156068d816"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9488f069-d113-4713-99ff-0ef16f3bbf24"),
                            CheckinDate = new DateOnly(2024, 9, 15),
                            CheckoutDate = new DateOnly(2024, 9, 18),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7984),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("250c05fc-0810-4fe5-addf-c5d334c6fd7b"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4a13c025-8234-440c-9885-66e8ea795f38"),
                            CheckinDate = new DateOnly(2024, 10, 1),
                            CheckoutDate = new DateOnly(2024, 10, 5),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7987),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("b4fc3887-e80a-4bc3-808a-ed09f8ce9831"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("61b6ed7c-5e1d-4c66-980d-e2bf55f60d35"),
                            CheckinDate = new DateOnly(2024, 10, 5),
                            CheckoutDate = new DateOnly(2024, 10, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8064),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("098c20f4-59bd-497d-a29f-6c6c14e1a1ee"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("29bbc89c-78de-41c3-9eb8-f9b5229c0e2c"),
                            CheckinDate = new DateOnly(2024, 10, 15),
                            CheckoutDate = new DateOnly(2024, 10, 20),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8066),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("bb526eb4-02d9-4c4b-877c-0125d7af745b"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique()
                        .HasFilter("[IdentityNumber] IS NOT NULL");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72ac912b-58fa-4bd4-ab8e-51ab54a88fcb"),
                            Address = "Ankara Çankaya",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7890),
                            DateOfBirth = new DateOnly(1990, 6, 30),
                            Email = "mehmet.kara@example.com",
                            FirstName = "Mehmet",
                            IdentityNumber = "12345678901",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kara",
                            Phone = "01234567892",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("643447f1-41e4-4108-960c-5a6238d8cdd4"),
                            Address = "İzmir Karşıyaka",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7895),
                            DateOfBirth = new DateOnly(1988, 12, 25),
                            Email = "ayse.yilmaz@example.com",
                            FirstName = "Ayşe",
                            IdentityNumber = "10987654321",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "09876543212",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e292e5b5-adc2-4801-8205-538872f66e50"),
                            Address = "Bursa Nilüfer",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7967),
                            DateOfBirth = new DateOnly(1985, 4, 12),
                            Email = "burak.ozdemir@example.com",
                            FirstName = "Burak",
                            IdentityNumber = "12345678902",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Özdemir",
                            Phone = "01234567893",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02b317f3-5d36-4cb7-a9ec-4c54ea631a17"),
                            Address = "Antalya Konyaaltı",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7969),
                            DateOfBirth = new DateOnly(1992, 8, 22),
                            Email = "zeynep.aydin@example.com",
                            FirstName = "Zeynep",
                            IdentityNumber = "10987654322",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Aydın",
                            Phone = "09876543213",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb201a57-e759-4ae1-abc7-800d95ba60d3"),
                            Address = "İstanbul Şişli",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7970),
                            DateOfBirth = new DateOnly(1980, 11, 10),
                            Email = "can.yurt@example.com",
                            FirstName = "Can",
                            IdentityNumber = "45678912301",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yurt",
                            Phone = "05678912345",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0f405f0b-a999-42b2-8e66-898d1e9bcf72"),
                            Address = "İstanbul Kadıköy",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8052),
                            DateOfBirth = new DateOnly(1986, 2, 20),
                            Email = "ege.kurt@example.com",
                            FirstName = "Ege",
                            IdentityNumber = "67890123456",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kurt",
                            Phone = "05556667788",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bc067eba-e5c8-4801-83bc-f2cc33796360"),
                            Address = "İzmir Alsancak",
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8054),
                            DateOfBirth = new DateOnly(1995, 7, 15),
                            Email = "elif.sonmez@example.com",
                            FirstName = "Elif",
                            IdentityNumber = "54321098765",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Sönmez",
                            Phone = "07778889900",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("CheckinTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckoutTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte>("Stars")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("104276d2-de0a-42c9-a1f1-a7eb55cee642"),
                            Address = "Antalya/Belek",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7762),
                            Email = "hiltonhotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hilton",
                            Phone = "01234567890",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb8e20ad-be96-4754-9d2c-237124a40220"),
                            Address = "Bodrum/Yalıkavak",
                            CheckinTime = new TimeOnly(15, 0, 0),
                            CheckoutTime = new TimeOnly(11, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7779),
                            Email = "marriotthotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Marriott",
                            Phone = "09876543210",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2f84d742-03b0-4fc3-a0b7-34f27fcb38f1"),
                            Address = "Ankara Çankaya",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8011),
                            Email = "radissonblu@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Radisson Blu",
                            Phone = "02223334455",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0487e1bf-ae68-4a98-a940-45d75f8f6ccf"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7863),
                            HotelId = new Guid("104276d2-de0a-42c9-a1f1-a7eb55cee642"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 201,
                            RoomTypeId = new Guid("5e3f4479-05f1-4e4c-8a40-12435c1550b1"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("da461c7d-e8d1-4009-b1b8-d8156068d816"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7866),
                            HotelId = new Guid("104276d2-de0a-42c9-a1f1-a7eb55cee642"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 202,
                            RoomTypeId = new Guid("6816c7d7-0ded-49f6-b74d-e6b5d17ddbe3"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("62d1962b-b17d-4bb3-b1c6-c6af731f090b"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7869),
                            HotelId = new Guid("cb8e20ad-be96-4754-9d2c-237124a40220"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 301,
                            RoomTypeId = new Guid("f68fcf94-169d-4675-a790-24f0d9bd4a3f"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("250c05fc-0810-4fe5-addf-c5d334c6fd7b"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7870),
                            HotelId = new Guid("cb8e20ad-be96-4754-9d2c-237124a40220"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 302,
                            RoomTypeId = new Guid("5e3f4479-05f1-4e4c-8a40-12435c1550b1"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b4fc3887-e80a-4bc3-808a-ed09f8ce9831"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7872),
                            HotelId = new Guid("cb8e20ad-be96-4754-9d2c-237124a40220"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 303,
                            RoomTypeId = new Guid("6816c7d7-0ded-49f6-b74d-e6b5d17ddbe3"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("098c20f4-59bd-497d-a29f-6c6c14e1a1ee"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8038),
                            HotelId = new Guid("2f84d742-03b0-4fc3-a0b7-34f27fcb38f1"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 101,
                            RoomTypeId = new Guid("4978f098-8a3e-4c1a-a477-9064e69bd394"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bb526eb4-02d9-4c4b-877c-0125d7af745b"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8039),
                            HotelId = new Guid("2f84d742-03b0-4fc3-a0b7-34f27fcb38f1"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 102,
                            RoomTypeId = new Guid("2ea73e95-e4a3-421b-bf1d-648e818f1c69"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a5887466-ba0d-46ed-be31-f62e98ff936e"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8041),
                            HotelId = new Guid("2f84d742-03b0-4fc3-a0b7-34f27fcb38f1"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 103,
                            RoomTypeId = new Guid("2ea73e95-e4a3-421b-bf1d-648e818f1c69"),
                            Status = "Occupied",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Capacity")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e3f4479-05f1-4e4c-8a40-12435c1550b1"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7843),
                            Description = "Deluxe room with sea view",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deluxe",
                            PricePerNight = 2000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6816c7d7-0ded-49f6-b74d-e6b5d17ddbe3"),
                            Capacity = (byte)2,
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7845),
                            Description = "Executive room with additional amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Executive",
                            PricePerNight = 3500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f68fcf94-169d-4675-a790-24f0d9bd4a3f"),
                            Capacity = (byte)1,
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7849),
                            Description = "Standard room",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Standard",
                            PricePerNight = 700m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4978f098-8a3e-4c1a-a477-9064e69bd394"),
                            Capacity = (byte)4,
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8025),
                            Description = "Luxurious Presidential Suite",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Presidential Suite",
                            PricePerNight = 5000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2ea73e95-e4a3-421b-bf1d-648e818f1c69"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(8026),
                            Description = "Spacious Junior Suite with extra amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Junior Suite",
                            PricePerNight = 2500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("587d4462-92be-46ed-a32d-7bbc78bbabb6"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7815),
                            DateOfBirth = new DateOnly(1985, 5, 15),
                            Email = "emre.yilmaz@example.com",
                            FirstName = "Emre",
                            HireDate = new DateOnly(2015, 6, 1),
                            HotelId = new Guid("104276d2-de0a-42c9-a1f1-a7eb55cee642"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "01234567891",
                            Position = "Receptionist",
                            Salary = 30000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6ecd27d0-b1ca-47a1-a513-ef67342e31c1"),
                            CreatedTime = new DateTime(2024, 7, 26, 10, 59, 34, 343, DateTimeKind.Local).AddTicks(7826),
                            DateOfBirth = new DateOnly(1982, 3, 10),
                            Email = "selin.demir@example.com",
                            FirstName = "Selin",
                            HireDate = new DateOnly(2018, 4, 1),
                            HotelId = new Guid("cb8e20ad-be96-4754-9d2c-237124a40220"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Demir",
                            Phone = "09876543211",
                            Position = "Chef",
                            Salary = 40000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", "Guest")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Navigation("BRBookingGuests");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Navigation("BRBookingGuests");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
