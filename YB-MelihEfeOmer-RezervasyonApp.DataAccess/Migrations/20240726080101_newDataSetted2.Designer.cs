// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MelihEfeOmer_RezervasyonApp.DataAccess.Context;

#nullable disable

namespace YB_MelihEfeOmer_RezervasyonApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240726080101_newDataSetted2")]
    partial class newDataSetted2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("BRBookingGuests");

                    b.HasData(
                        new
                        {
                            BookingId = new Guid("9c4b6924-f4d0-40bc-872d-9bfb8242eb55"),
                            GuestId = new Guid("4f42ba1f-2b1a-4032-8e3b-56101b5faf39"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5055),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("4e1c7cef-4630-43ab-b4bb-3c101176e4f5"),
                            GuestId = new Guid("b1748721-3387-4831-8900-f992482099fd"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5056),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("aecd7393-96a3-4d33-84c7-08f6177c5e00"),
                            GuestId = new Guid("48f2e42c-dcf8-41f5-b120-82556a80b57b"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5099),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("38d95d98-443d-409d-992c-4e1eade9b812"),
                            GuestId = new Guid("9cb7c7be-ae79-4a8c-aebc-d87289700ed9"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5102),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("cd6654e7-e51c-434a-8dfd-9857feae9063"),
                            GuestId = new Guid("ba889f71-5a25-4f90-9856-ab6bfc66cea3"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5103),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("43d97cf9-5dfa-4c92-97ad-5307409ed7b8"),
                            GuestId = new Guid("103153ef-548a-4b0e-8181-bea256481a84"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5192),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = new Guid("8b625fef-809b-4e66-8ece-a0d09e4eff7f"),
                            GuestId = new Guid("02e8c85c-da54-4074-a1e1-473c2c38b8cc"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5193),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("CheckinDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CheckoutDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c4b6924-f4d0-40bc-872d-9bfb8242eb55"),
                            CheckinDate = new DateOnly(2024, 9, 10),
                            CheckoutDate = new DateOnly(2024, 9, 15),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5038),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("208b24af-fd91-4c2d-9dc0-426f049d1923"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4e1c7cef-4630-43ab-b4bb-3c101176e4f5"),
                            CheckinDate = new DateOnly(2024, 9, 20),
                            CheckoutDate = new DateOnly(2024, 9, 25),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5042),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("266d4ba4-1d78-47d0-a683-4d92483e08ce"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("aecd7393-96a3-4d33-84c7-08f6177c5e00"),
                            CheckinDate = new DateOnly(2024, 9, 5),
                            CheckoutDate = new DateOnly(2024, 9, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5085),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("a9be0c84-7700-4e25-a443-2d9fe9a68ad6"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("38d95d98-443d-409d-992c-4e1eade9b812"),
                            CheckinDate = new DateOnly(2024, 9, 15),
                            CheckoutDate = new DateOnly(2024, 9, 18),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5086),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("d681e8d3-29ac-4247-a88c-7410629f8596"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cd6654e7-e51c-434a-8dfd-9857feae9063"),
                            CheckinDate = new DateOnly(2024, 10, 1),
                            CheckoutDate = new DateOnly(2024, 10, 5),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5088),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("6b93575f-56a5-40f7-8c08-9fe75341573c"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("43d97cf9-5dfa-4c92-97ad-5307409ed7b8"),
                            CheckinDate = new DateOnly(2024, 10, 5),
                            CheckoutDate = new DateOnly(2024, 10, 10),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5166),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("93356ce6-81f4-4cde-a15e-79a640a27492"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8b625fef-809b-4e66-8ece-a0d09e4eff7f"),
                            CheckinDate = new DateOnly(2024, 10, 15),
                            CheckoutDate = new DateOnly(2024, 10, 20),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5167),
                            IsActive = true,
                            IsDeleted = false,
                            RoomId = new Guid("8a8e6a2a-b1ee-4ed3-9cd4-ba0862c61551"),
                            TotalPrice = 0m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique()
                        .HasFilter("[IdentityNumber] IS NOT NULL");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f42ba1f-2b1a-4032-8e3b-56101b5faf39"),
                            Address = "Ankara Çankaya",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5019),
                            DateOfBirth = new DateOnly(1990, 6, 30),
                            Email = "mehmet.kara@example.com",
                            FirstName = "Mehmet",
                            IdentityNumber = "12345678901",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kara",
                            Phone = "01234567892",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b1748721-3387-4831-8900-f992482099fd"),
                            Address = "İzmir Karşıyaka",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5024),
                            DateOfBirth = new DateOnly(1988, 12, 25),
                            Email = "ayse.yilmaz@example.com",
                            FirstName = "Ayşe",
                            IdentityNumber = "10987654321",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "09876543212",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("48f2e42c-dcf8-41f5-b120-82556a80b57b"),
                            Address = "Bursa Nilüfer",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5068),
                            DateOfBirth = new DateOnly(1985, 4, 12),
                            Email = "burak.ozdemir@example.com",
                            FirstName = "Burak",
                            IdentityNumber = "12345678902",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Özdemir",
                            Phone = "01234567893",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9cb7c7be-ae79-4a8c-aebc-d87289700ed9"),
                            Address = "Antalya Konyaaltı",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5070),
                            DateOfBirth = new DateOnly(1992, 8, 22),
                            Email = "zeynep.aydin@example.com",
                            FirstName = "Zeynep",
                            IdentityNumber = "10987654322",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Aydın",
                            Phone = "09876543213",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ba889f71-5a25-4f90-9856-ab6bfc66cea3"),
                            Address = "İstanbul Şişli",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5073),
                            DateOfBirth = new DateOnly(1980, 11, 10),
                            Email = "can.yurt@example.com",
                            FirstName = "Can",
                            IdentityNumber = "45678912301",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yurt",
                            Phone = "05678912345",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("103153ef-548a-4b0e-8181-bea256481a84"),
                            Address = "İstanbul Kadıköy",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5153),
                            DateOfBirth = new DateOnly(1986, 2, 20),
                            Email = "ege.kurt@example.com",
                            FirstName = "Ege",
                            IdentityNumber = "67890123456",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Kurt",
                            Phone = "05556667788",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02e8c85c-da54-4074-a1e1-473c2c38b8cc"),
                            Address = "İzmir Alsancak",
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5155),
                            DateOfBirth = new DateOnly(1995, 7, 15),
                            Email = "elif.sonmez@example.com",
                            FirstName = "Elif",
                            IdentityNumber = "54321098765",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Sönmez",
                            Phone = "07778889900",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("CheckinTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("CheckoutTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte>("Stars")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b46fb2c-96f7-4d8f-9ff5-455fb38c358c"),
                            Address = "Antalya/Belek",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4872),
                            Email = "hiltonhotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hilton",
                            Phone = "01234567890",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a682ebfe-a0eb-4aa1-b2b1-e9561afdf2bd"),
                            Address = "Bodrum/Yalıkavak",
                            CheckinTime = new TimeOnly(15, 0, 0),
                            CheckoutTime = new TimeOnly(11, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4888),
                            Email = "marriotthotel@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Marriott",
                            Phone = "09876543210",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1b80125c-a94d-4c36-aaac-9974b35b2313"),
                            Address = "Ankara Çankaya",
                            CheckinTime = new TimeOnly(14, 0, 0),
                            CheckoutTime = new TimeOnly(12, 0, 0),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5113),
                            Email = "radissonblu@example.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Radisson Blu",
                            Phone = "02223334455",
                            Stars = (byte)5,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("208b24af-fd91-4c2d-9dc0-426f049d1923"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4993),
                            HotelId = new Guid("8b46fb2c-96f7-4d8f-9ff5-455fb38c358c"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 201,
                            RoomTypeId = new Guid("16a6f3b6-84a3-4565-9ade-1d1ce091ae99"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a9be0c84-7700-4e25-a443-2d9fe9a68ad6"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4995),
                            HotelId = new Guid("8b46fb2c-96f7-4d8f-9ff5-455fb38c358c"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 202,
                            RoomTypeId = new Guid("4b22ae83-834a-4700-a009-0ea689f36419"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("266d4ba4-1d78-47d0-a683-4d92483e08ce"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4997),
                            HotelId = new Guid("a682ebfe-a0eb-4aa1-b2b1-e9561afdf2bd"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 301,
                            RoomTypeId = new Guid("82757736-fd93-4aa6-ae1d-17d590766d86"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d681e8d3-29ac-4247-a88c-7410629f8596"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4998),
                            HotelId = new Guid("a682ebfe-a0eb-4aa1-b2b1-e9561afdf2bd"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 302,
                            RoomTypeId = new Guid("16a6f3b6-84a3-4565-9ade-1d1ce091ae99"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6b93575f-56a5-40f7-8c08-9fe75341573c"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5000),
                            HotelId = new Guid("a682ebfe-a0eb-4aa1-b2b1-e9561afdf2bd"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 303,
                            RoomTypeId = new Guid("4b22ae83-834a-4700-a009-0ea689f36419"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("93356ce6-81f4-4cde-a15e-79a640a27492"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5138),
                            HotelId = new Guid("1b80125c-a94d-4c36-aaac-9974b35b2313"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 101,
                            RoomTypeId = new Guid("a37ac234-16c0-4e3b-a350-e2166de6e7b5"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8a8e6a2a-b1ee-4ed3-9cd4-ba0862c61551"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5139),
                            HotelId = new Guid("1b80125c-a94d-4c36-aaac-9974b35b2313"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 102,
                            RoomTypeId = new Guid("34c07445-759a-45ef-8464-bf4ddf6a6201"),
                            Status = "Available",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0eafeef7-4c8c-4929-a3fa-cc09d816bc0f"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5140),
                            HotelId = new Guid("1b80125c-a94d-4c36-aaac-9974b35b2313"),
                            IsActive = true,
                            IsDeleted = false,
                            RoomNumber = 103,
                            RoomTypeId = new Guid("34c07445-759a-45ef-8464-bf4ddf6a6201"),
                            Status = "Occupied",
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Capacity")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PricePerNight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16a6f3b6-84a3-4565-9ade-1d1ce091ae99"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4973),
                            Description = "Deluxe room with sea view",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deluxe",
                            PricePerNight = 2000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4b22ae83-834a-4700-a009-0ea689f36419"),
                            Capacity = (byte)2,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4976),
                            Description = "Executive room with additional amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Executive",
                            PricePerNight = 3500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("82757736-fd93-4aa6-ae1d-17d590766d86"),
                            Capacity = (byte)1,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4977),
                            Description = "Standard room",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Standard",
                            PricePerNight = 700m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a37ac234-16c0-4e3b-a350-e2166de6e7b5"),
                            Capacity = (byte)4,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5125),
                            Description = "Luxurious Presidential Suite",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Presidential",
                            PricePerNight = 5000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("34c07445-759a-45ef-8464-bf4ddf6a6201"),
                            Capacity = (byte)3,
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(5126),
                            Description = "Spacious Junior Suite with extra amenities",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Junior S.",
                            PricePerNight = 2500m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4038f75-8fd9-48b6-97d1-438295968971"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4940),
                            DateOfBirth = new DateOnly(1985, 5, 15),
                            Email = "emre.yilmaz@example.com",
                            FirstName = "Emre",
                            HireDate = new DateOnly(2015, 6, 1),
                            HotelId = new Guid("8b46fb2c-96f7-4d8f-9ff5-455fb38c358c"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Yılmaz",
                            Phone = "01234567891",
                            Position = "Receptionist",
                            Salary = 30000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("416e2bc4-cdef-4e18-91a9-8ab8ee8107b3"),
                            CreatedTime = new DateTime(2024, 7, 26, 11, 1, 0, 995, DateTimeKind.Local).AddTicks(4957),
                            DateOfBirth = new DateOnly(1982, 3, 10),
                            Email = "selin.demir@example.com",
                            FirstName = "Selin",
                            HireDate = new DateOnly(2018, 4, 1),
                            HotelId = new Guid("a682ebfe-a0eb-4aa1-b2b1-e9561afdf2bd"),
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Demir",
                            Phone = "09876543211",
                            Position = "Chef",
                            Salary = 40000m,
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.BRBookingGuest", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", "Guest")
                        .WithMany("BRBookingGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Payment", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Staff", b =>
                {
                    b.HasOne("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Booking", b =>
                {
                    b.Navigation("BRBookingGuests");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Guest", b =>
                {
                    b.Navigation("BRBookingGuests");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MelihEfeOmer_RezervasyonApp.Entity.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
